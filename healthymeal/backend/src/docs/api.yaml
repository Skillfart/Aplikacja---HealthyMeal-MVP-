openapi: 3.0.0
info:
  title: HealthyMeal API
  version: 1.0.0
  description: API dla aplikacji HealthyMeal - systemu zarządzania przepisami z modyfikacją AI

servers:
  - url: http://localhost:3031
    description: Lokalny serwer deweloperski
  - url: https://api.healthymeal.app
    description: Serwer produkcyjny

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
        email:
          type: string
          format: email
        preferences:
          type: object
          properties:
            dietType:
              type: string
              enum: [keto, lowCarb, paleo, vegetarian, vegan, glutenFree, dairyFree, normal]
            maxCarbs:
              type: number
            excludedProducts:
              type: array
              items:
                type: string
            allergens:
              type: array
              items:
                type: string

    Recipe:
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
        title:
          type: string
        ingredients:
          type: array
          items:
            type: object
            properties:
              ingredient:
                type: object
                properties:
                  _id:
                    type: string
                    format: ObjectId
                  name:
                    type: string
              quantity:
                type: number
              unit:
                type: string
        steps:
          type: array
          items:
            type: object
            properties:
              number:
                type: integer
              description:
                type: string
        preparationTime:
          type: integer
        difficulty:
          type: string
          enum: [easy, medium, hard]
        servings:
          type: integer

paths:
  /api/auth/register:
    post:
      summary: Rejestracja nowego użytkownika
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
      responses:
        '201':
          description: Użytkownik został zarejestrowany
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Nieprawidłowe dane wejściowe
        '409':
          description: Email już istnieje

  /api/auth/login:
    post:
      summary: Logowanie użytkownika
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Pomyślne logowanie
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Nieprawidłowe dane logowania

  /api/recipes:
    get:
      summary: Pobieranie listy przepisów
      tags: [Recipes]
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: dietType
          schema:
            type: string
            enum: [keto, lowCarb, paleo, vegetarian, vegan, glutenFree, dairyFree, normal]
      responses:
        '200':
          description: Lista przepisów
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Recipe'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: Brak autoryzacji

  /api/recipes/{id}:
    get:
      summary: Pobieranie szczegółów przepisu
      tags: [Recipes]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: ObjectId
      responses:
        '200':
          description: Szczegóły przepisu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '404':
          description: Przepis nie znaleziony 